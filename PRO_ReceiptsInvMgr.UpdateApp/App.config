<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
  </configSections>
  <appSettings>
    <add key="UpdateServerUrl" value="http://localhost:8050/UpgradeService.asmx"/>
  </appSettings>
  <log4net>
    <!--定义输出到文件中-->
    <appender name="rollingFile" type="log4net.Appender.RollingFileAppender">
      <!--定义文件存放位置-->
      <file value="Logs/" />
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true" />
      <RollingStyle value="Date" />
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <DatePattern value="yyyyMMdd&quot;.log&quot;" />
      <!--日志文件名是否为静态-->
      <StaticLogFileName value="false" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <!--布局（向用户显示最后经过格式化的输出信息）-->
      <layout type="log4net.Layout.PatternLayout">
        <!--
           %m(message):输出的日志消息，如ILog.Debug(…)输出的一条消息 
           %n(new line):换行 
           %d(datetime):输出当前语句运行的时刻 
           %r(run time):输出程序从运行到执行到当前语句时消耗的毫秒数 
           %t(thread id):当前语句所在的线程ID 
           %p(priority): 日志的当前优先级别，即DEBUG、INFO、WARN…等 
           %c(class):当前日志对象的名称，例如：
           %L：输出语句所在的行号 
           %F：输出语句所在的文件名 
           %-数字：表示该项的最小长度，如果不够，则用空格填充
          -->
        <Header value="[Header] " />
        <Footer value="[Footer] " />
        <!--正文-->
        <ConversionPattern value="记录时间：[%date] 线程ID:[%thread] 日志级别：[%-5level] 所在类：[%logger][%L] %newline %-5level：%message%newline" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="rollingFile" />
    </root>
  </log4net>
</configuration>