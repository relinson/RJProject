<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:PRO_ReceiptsInvMgr.Client.UserControls">


    <Style x:Key="GridTextLeft"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Padding"
                Value="2,0,2,0" />
        <Setter Property="TextTrimming"
                Value="WordEllipsis" />
        <Setter Property="TextAlignment"
                Value="Left" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="GridTextCenter"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Padding"
                Value="2,0,2,0" />
        <Setter Property="TextTrimming"
                Value="WordEllipsis" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>
    <Style x:Key="GridCheckBoxCenter"
           TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>
    <Style  TargetType="{x:Type Label}">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="#7F828A" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
    </Style>

    <Style x:Key="TextBlockStyle"  TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height"
                Value="23" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="#7F828A" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0,1,1,1" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0"
                            BorderBrush="#7F828A"
                            BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="AliceBlue"
                                      VerticalAlignment="Top"
                                      VerticalContentAlignment="Top"
                                      Height="{TemplateBinding Height}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="BorderBrush"
                                    Value="#0EACE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height"
                Value="24" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="#7F828A" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0"
                            BorderBrush="#7F828A"
                            BorderThickness="1">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="BorderBrush"
                                    Value="#0EACE5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonSubmit"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="140" />
        <Setter Property="Height"
                Value="35" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0"
                            Background="#0168b7" CornerRadius="6,6,6,6">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#3D9CBE" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#20D03A" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="#0168b7"
                                    TargetName="btnBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#C0C088" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--按钮默认-->
    <Style x:Key="ButtonStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="68" />
        <Setter Property="Height"
                Value="26" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0" CornerRadius="5"
                            Background="#00A0E9">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#3D9CBE" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#20D03A" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="#00A0E9"
                                    TargetName="btnBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="#C0C088"
                                    TargetName="btnBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 

    <!--标题栏样式-->
    <Style x:Key="CustomerDataGridColumnHeader" TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Height"
                Value="28" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Foreground"
                Value="#6A6F78" />
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="HorizontalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="BorderThickness"
                Value="0,0,0,1"></Setter>
        <Setter Property="BorderBrush"
                Value="#e5e5e5"></Setter>
        <Setter Property="Background"
                Value="#f9f9f9"></Setter>
    </Style>
    <!--行样式触发-->
    <!--背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
    <Style x:Key="CustomerDataGridRow"  TargetType="DataGridRow">
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="#778192" />
        <Setter Property="Background"
                Value="Transparent" />
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <!--单元格样式触发-->
    <Style x:Key="CustomerDataGridCell"  TargetType="DataGridCell">
        <Setter Property="BorderBrush"
                Value="#e5e5e5" />
        <Setter Property="BorderThickness"
                Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <!--<TextBlock TextAlignment="Center"
                               VerticalAlignment="Center">-->
                    <ContentPresenter />
                    <!--</TextBlock>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Foreground"
                Value="#778192" />

            </Trigger>
        </Style.Triggers>
    </Style>
   
    <!--DataGrid列表样式-->
    <Style x:Key="CustomerDataGridStyle" TargetType="DataGrid">
        <Setter Property="AlternationCount"
                Value="2" />
        <Setter Property="SelectionMode"
                Value="Single" />
        <Setter Property="AutoGenerateColumns"
                Value="false" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="CanUserAddRows"
                Value="false" />
        <Setter Property="CanUserDeleteRows"
                Value="false" />
        <Setter Property="CanUserResizeRows"
                Value="false" />
        <Setter Property="CanUserReorderColumns"
                Value="false" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <!--外围边框线颜色-->
        <Setter Property="BorderBrush"
                Value="#e5e5e5" />
        <!--外围边框线粗细-->
        <Setter Property="BorderThickness"
                Value="0,0,0,0"></Setter>
        <Setter Property="ColumnHeaderStyle"
                Value="{StaticResource CustomerDataGridColumnHeader}"></Setter>
        <Setter Property="CellStyle" Value="{StaticResource CustomerDataGridCell}" />
        <Setter Property="RowStyle" Value="{StaticResource CustomerDataGridRow}" />
        <Setter Property="HorizontalGridLinesBrush">
            <Setter.Value>
                <!--数据行横向线颜色-->
                <SolidColorBrush Color="#e5e5e5" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalGridLinesBrush">
            <Setter.Value>
                <!--数据行竖向线颜色-->
                <SolidColorBrush Color="#e5e5e5" />
            </Setter.Value>
        </Setter>
    </Style>
     
    <Style x:Key="BookButton" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btnBorder" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" BorderBrush="Transparent">
                        <StackPanel x:Name="btnPanel" Orientation="Horizontal">
                            <Image  RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="None" Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/fp-icon-yhsm.png"></Image>
                            <Label Name="lbl" Foreground="{TemplateBinding Foreground}" FontFamily="Microsoft YaHei" FontSize="14" HorizontalAlignment="Center" Content="{TemplateBinding Content}"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="#CBA460"
                                    TargetName="lbl" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="downProgress" TargetType="{x:Type ProgressBar}">
        <Setter Property="Background"
                Value="#fff" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Grid MinHeight="14" MinWidth="200">
                        <Border   
                                    Name="PART_Track"       BorderBrush="Black"     BorderThickness="1" Background="#FF57C7C9" />
                        <Border   
                                x:Name="PART_Indicator"    
                                BorderBrush="Red"   
                                BorderThickness="1"   
                                HorizontalAlignment="Left" Background="#DAFDD1">

                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DownloadStyle" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border   x:Name="ContentContainer"  Width="108" Height="38"  
                                            BorderThickness="0" VerticalAlignment="Center" Background="{TemplateBinding Background}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UninstallStyle" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border   x:Name="ContentContainer"  Width="108" Height="38"  
                                            BorderThickness="0" VerticalAlignment="Center">
                        <Border.Background>
                            <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/delete-btn.jpg"  Stretch="None"/>
                        </Border.Background>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CancelStyle" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border   x:Name="ContentContainer"  Width="108" Height="38"  
                                            BorderThickness="0" VerticalAlignment="Center">
                        <Border.Background>
                            <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/quxiao.png"  Stretch="None"/>
                        </Border.Background>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShowDownStyle" TargetType="{x:Type Button}">
        <Setter Property="Content" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border   x:Name="ContentContainer"  Width="108" Height="38"  
                                            BorderThickness="0" VerticalAlignment="Center">
                        <Border.Background>
                            <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/btn03.png"  Stretch="None"/>
                        </Border.Background>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"  
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle  
                            Fill="#90000000"  
                            RadiusX="3"  
                            RadiusY="3"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="for_scrollbar"  
           TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"  
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"  
                Value="false"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Margin"  
                Value="0"/>
        <Setter Property="Width"  
                Value="5"/>
        <Setter Property="MinWidth"  
                Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"  
                               IsEnabled="{TemplateBinding IsMouseOver}"  
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"  
                     Value="Horizontal">
                <Setter Property="Background"  
                        Value="Transparent"/>
                <Setter Property="Margin"  
                        Value="1,0,6,1"/>
                <Setter Property="Height"  
                        Value="5"/>
                <Setter Property="MinHeight"  
                        Value="5"/>
                <Setter Property="Width"  
                        Value="Auto"/>
                <Setter Property="Opacity"  
                        Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"  
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ScrollViewer -->
    <Style x:Key="for_scrollviewer"  
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="BorderBrush"  
                Value="LightGray"/>
        <Setter Property="BorderThickness"  
                Value="0"/>
        <Setter Property="HorizontalContentAlignment"  
                Value="Left"/>
        <Setter Property="HorizontalScrollBarVisibility"  
                Value="Auto"/>
        <Setter Property="VerticalContentAlignment"  
                Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility"  
                Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"  
                            BorderThickness="{TemplateBinding BorderThickness}"  
                            SnapsToDevicePixels="True">
                        <Grid Background="{TemplateBinding Background}">
                            <ScrollContentPresenter  
                                Cursor="{TemplateBinding Cursor}"  
                                Margin="{TemplateBinding Padding}"  
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"  
                                       HorizontalAlignment="Right"  
                                       Maximum="{TemplateBinding ScrollableHeight}"  
                                       Orientation="Vertical"  
                                       Style="{StaticResource for_scrollbar}"  
                                       ViewportSize="{TemplateBinding ViewportHeight}"  
                                       Value="{TemplateBinding VerticalOffset}"  
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  
                                       Maximum="{TemplateBinding ScrollableWidth}"  
                                       Orientation="Horizontal"  
                                       Style="{StaticResource for_scrollbar}"  
                                       VerticalAlignment="Bottom"  
                                       Value="{TemplateBinding HorizontalOffset}"  
                                       ViewportSize="{TemplateBinding ViewportWidth}"  
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ScrollChanged">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                    <!--自动消失-->
                                    <!--<DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"  
                                        BeginTime="0:0:1"/> -->
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                    <!--
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"  
                                        BeginTime="0:0:1"/>-->
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseEnter"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!---鼠标离开后渐渐消失-->
                        <!--
                        <EventTrigger RoutedEvent="MouseLeave"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        -->
                        <EventTrigger RoutedEvent="MouseEnter"  
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <!--
                        <EventTrigger RoutedEvent="MouseLeave"  
                                      SourceName="PART_HorizontalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_HorizontalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger> -->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonClose"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="30" />
        <Setter Property="Height"
                Value="30" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal"
                                Background="Transparent"
                                Margin="0,0,0,0">
                        <Image Name="closeImg"
                               Margin="0,0,0,0"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/close.png"
                               Stretch="Fill" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSure"
           TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="100" />
        <Setter Property="Height"
                Value="36" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <StackPanel Orientation="Horizontal"
                                Background="Transparent"
                                Margin="0,0,0,0">
                        <Image Name="SureImgBtnBg"
                               Margin="0,0,0,0"
                               Stretch="None"
                               UseLayoutRounding="True"
                               RenderOptions.BitmapScalingMode="NearestNeighbor"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/confirm.png"
                               />
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source"
                                    Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/confirm-hover.png"
                                    TargetName="SureImgBtnBg" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="Source"
                                    Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/confirm-focus.png"
                                    TargetName="SureImgBtnBg" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="False">
                            <Setter Property="Source"
                                    Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/confirm.png"
                                    TargetName="SureImgBtnBg" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Source"
                                    Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/confirm.png"
                                    TargetName="SureImgBtnBg" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonSwitch"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Stretch="None"
                               UseLayoutRounding="True"
                               RenderOptions.BitmapScalingMode="Unspecified"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/switch.png"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/switch-hover.png" TargetName="img" />

                        </Trigger>
                        <!--<Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="Background"
                                    Value="Transparent"
                                    TargetName="btnBorder" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="WaitingBoxBackground" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="TextForeground" Color="#3A3A3A"></SolidColorBrush>

    <Style x:Key="FIcon" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/#SF2015"></Setter>
        <Setter Property="Foreground" Value="{StaticResource TextForeground}"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>


    <Style x:Key="BackStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Stretch="None"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-btn-back.png"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-btn-back-hover.png" TargetName="img" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CYSuccessStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Stretch="None"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-status_03.png"
                               />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-status-hover_03.png" TargetName="img" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CYNotFindStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Stretch="None"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-status_06.png"
                               />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CYNotSameStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Stretch="None"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/cy-status_08.png"
                               />
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GXRZStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-gx_20.png"
                              Stretch="None" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-gx-hover_20.png" TargetName="img" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="JXCXButton"
           TargetType="{x:Type Button}">
        <Setter Property="FontSize"
                Value="13" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontFamily"
                Value="Microsoft YaHei" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0" CornerRadius="5"
                            Background="#E6B966">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#EFC476" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PrintStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-print_03.png"
                              Stretch="None" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-print-hover_03.png" TargetName="img" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExportStyle"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder">
                        <Image Name="img"
                               Source="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-output_03.png"
                              Stretch="None" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Source" Value="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXGL/pzb-btn-output-hover_03.png" TargetName="img" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="JXLoginBtn"
           TargetType="{x:Type Button}">
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder" CornerRadius="22">
                        <Border.Background>
                            <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXLogin/login-btn-big.png"></ImageBrush>
                        </Border.Background>
                        <TextBlock FontSize="18" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{TemplateBinding Content}"></TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background" TargetName="btnBorder">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXLogin/login-btn-big-hover.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="HighLightColor" Color="#cba460"></SolidColorBrush>

    <Style x:Key="CloseStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                                BorderThickness="0,0,0,0"  >
                            <Border.Background>
                                <ImageBrush  ImageSource="/Resources/image/JXLogin/icon-exit.png"></ImageBrush>   
                            </Border.Background>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <ImageBrush   ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXLogin/icon-exit-hover.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="JXRegisterSureBtn"
           TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="border"
                                BorderThickness="0,0,0,0">
                            <Border.Background>
                                <ImageBrush ImageSource="/Resources/image/JXLogin/login-btn-small.png"
                                          RenderOptions.BitmapScalingMode="NearestNeighbor" ></ImageBrush>
                            </Border.Background>
                            <Label VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" FontSize="14" Content="{TemplateBinding Content}"></Label>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border">
                                <Setter.Value>
                                    <ImageBrush ImageSource="/PRO_ReceiptsInvMgr.Client;component/Resources/image/JXLogin/login-btn-small-hover.png"></ImageBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="#fff"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="btnBorder"
                            Margin="0,0,0,0"
                            Background="#A3ABB7" CornerRadius="6,6,6,6">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="btnBorder"
                                    Property="Background"
                                    Value="#AFB7C4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
