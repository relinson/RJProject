<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddFailed" xml:space="preserve">
    <value>添加失败</value>
  </data>
  <data name="AddSuccess" xml:space="preserve">
    <value>添加成功</value>
  </data>
  <data name="ConfirmToDelete" xml:space="preserve">
    <value>您确认要删除此数据吗？</value>
  </data>
  <data name="ConfirmToLock" xml:space="preserve">
    <value>您确认要锁定此数据吗？</value>
  </data>
  <data name="ConfirmToResend" xml:space="preserve">
    <value>您确认要重新发送吗？</value>
  </data>
  <data name="ConfirmToReset" xml:space="preserve">
    <value>您确认要重置该用户的密码吗？</value>
  </data>
  <data name="ConfirmToUnLock" xml:space="preserve">
    <value>您确认要解锁此数据吗？</value>
  </data>
  <data name="DeleteFailed" xml:space="preserve">
    <value>删除失败</value>
  </data>
  <data name="DeleteSuccess" xml:space="preserve">
    <value>删除成功</value>
  </data>
  <data name="EditFailed" xml:space="preserve">
    <value>编辑失败</value>
  </data>
  <data name="EditSuccess" xml:space="preserve">
    <value>编辑成功</value>
  </data>
  <data name="Empty" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>操作失败，请您检查</value>
  </data>
  <data name="ErrorCode" xml:space="preserve">
    <value>错误代码</value>
  </data>
  <data name="ErrorMessage" xml:space="preserve">
    <value>错误信息</value>
  </data>
  <data name="ExistMenu" xml:space="preserve">
    <value>菜单信息已经存在</value>
  </data>
  <data name="FailedDeleting" xml:space="preserve">
    <value>数据删除失败,请刷新页面</value>
  </data>
  <data name="FailedLoading" xml:space="preserve">
    <value>数据获取失败,请刷新页面</value>
  </data>
  <data name="FailedLocking" xml:space="preserve">
    <value>数据锁定失败，请刷新页面</value>
  </data>
  <data name="FailedResetting" xml:space="preserve">
    <value>密码重置失败，请稍后再试</value>
  </data>
  <data name="FailedSettingUserPermissions" xml:space="preserve">
    <value>用户权限设置失败,请稍候再试！</value>
  </data>
  <data name="FailedSettingUserRole" xml:space="preserve">
    <value>用户角色设置失败,请稍候再试！</value>
  </data>
  <data name="FailedUnLocking" xml:space="preserve">
    <value>数据解锁失败，请刷新页面</value>
  </data>
  <data name="FieldMismatch" xml:space="preserve">
    <value>字段不匹配</value>
  </data>
  <data name="IsLock" xml:space="preserve">
    <value>您确认禁用</value>
  </data>
  <data name="IsUnLock" xml:space="preserve">
    <value>您确认启用</value>
  </data>
  <data name="LockData" xml:space="preserve">
    <value>请您选择要禁用的数据</value>
  </data>
  <data name="LockFail" xml:space="preserve">
    <value>禁用失败</value>
  </data>
  <data name="LockSuccess" xml:space="preserve">
    <value>禁用成功</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="SaveFail" xml:space="preserve">
    <value>保存失败</value>
  </data>
  <data name="SelectModule" xml:space="preserve">
    <value>请选择所属模块</value>
  </data>
  <data name="SelectMonth" xml:space="preserve">
    <value>请选择月份</value>
  </data>
  <data name="SelectPermissionsToSet" xml:space="preserve">
    <value>请您勾选要设置的权限</value>
  </data>
  <data name="SelectRole" xml:space="preserve">
    <value>请您勾选要设置的角色！</value>
  </data>
  <data name="SelectRoleType" xml:space="preserve">
    <value>请选择角色类型</value>
  </data>
  <data name="SelectToDelete" xml:space="preserve">
    <value>请选择您要删除的数据</value>
  </data>
  <data name="SelectToLock" xml:space="preserve">
    <value>请您选择要锁定的数据</value>
  </data>
  <data name="SelectToUnLock" xml:space="preserve">
    <value>请您选择要解锁的数据</value>
  </data>
  <data name="Tips" xml:space="preserve">
    <value>友情提示</value>
  </data>
  <data name="UnLockData" xml:space="preserve">
    <value>请您选择要启用的数据</value>
  </data>
  <data name="UnlockFail" xml:space="preserve">
    <value>启用失败</value>
  </data>
  <data name="UnLockSuccess" xml:space="preserve">
    <value>启用成功</value>
  </data>
  <data name="UserNameExists" xml:space="preserve">
    <value>用户名已经存在，请检查！</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>是</value>
  </data>
</root>